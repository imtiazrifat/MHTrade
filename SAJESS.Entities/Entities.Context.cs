//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SAJESS.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<A_BookValue> A_BookValue { get; set; }
        public virtual DbSet<A_CostCenter> A_CostCenter { get; set; }
        public virtual DbSet<A_FiscalYear> A_FiscalYear { get; set; }
        public virtual DbSet<A_GlAccount> A_GlAccount { get; set; }
        public virtual DbSet<A_GlTransaction> A_GlTransaction { get; set; }
        public virtual DbSet<A_GlTransactionDetails> A_GlTransactionDetails { get; set; }
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<CompanyInfo> CompanyInfoes { get; set; }
        public virtual DbSet<DataConfig> DataConfigs { get; set; }
        public virtual DbSet<Designation> Designations { get; set; }
        public virtual DbSet<District> Districts { get; set; }
        public virtual DbSet<Division> Divisions { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<SupplierInvestment> SupplierInvestments { get; set; }
        public virtual DbSet<Thana> Thanas { get; set; }
    
        public virtual ObjectResult<sp_BalanceSheet_Result> sp_BalanceSheet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BalanceSheet_Result>("sp_BalanceSheet");
        }
    
        public virtual ObjectResult<sp_SupplierWiseInvestment_Result> sp_SupplierWiseInvestment(Nullable<int> supplierId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("supplierId", supplierId) :
                new ObjectParameter("supplierId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SupplierWiseInvestment_Result>("sp_SupplierWiseInvestment", supplierIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<spCashOrBankPayment_Result> spCashOrBankPayment(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCashOrBankPayment_Result>("spCashOrBankPayment", startDateParameter, endDateParameter);
        }
    
        public virtual int spCashReceiveStatement(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCashReceiveStatement", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<spCodeWiseGeneralLedger_Result> spCodeWiseGeneralLedger(Nullable<int> id, Nullable<System.DateTime> date)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCodeWiseGeneralLedger_Result>("spCodeWiseGeneralLedger", idParameter, dateParameter);
        }
    
        public virtual ObjectResult<spDateWiseTransaction_Result> spDateWiseTransaction(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDateWiseTransaction_Result>("spDateWiseTransaction", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<spGeneralLedgerReport_Result> spGeneralLedgerReport(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGeneralLedgerReport_Result>("spGeneralLedgerReport", idParameter);
        }
    
        public virtual ObjectResult<spGl_DateWiseTransaction_Result> spGl_DateWiseTransaction(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> id)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGl_DateWiseTransaction_Result>("spGl_DateWiseTransaction", fromDateParameter, toDateParameter, idParameter);
        }
    
        public virtual ObjectResult<spTrialBalance_Result> spTrialBalance(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTrialBalance_Result>("spTrialBalance", dateParameter);
        }
    }
}
